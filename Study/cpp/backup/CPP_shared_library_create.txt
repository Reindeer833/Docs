
                SHARED LIBRARY CREATE
				=====================
				
In dir: /home/petr/Development/cpp/cblocks/pxslib 
----------------------------------------------------------------------- 

I have 3 files: 
------------------ 
main.cpp
testlib.cpp
testlib.h    (functions here MUST be declared as:  extern  )
             (              extern std::string foo();      )

I want to create library   libtest.so   containing code from testlib.cpp
This library will be created as  libtest.so  but used as test
Prefix-suffix lib-so  will be added by linker


1. Compile Position Independent Code:
    g++ testlib.cpp -I$(pwd) -Wall -Werror -c -fPIC
    -----------------------------------------------
     -I$(pwd) ... directory with include files
     -Wall ...output all warnings
     -Werror...treat warnings as errors
     -c ... compile only, do not link
     -fPIC...compile Position Independent Code

2.  Create shared object
     g++ -shared testlib.o -o libtest.so
     -----------------------------------
     -shared ... create shared object from testlib.o
     -o libtest.so .... output this shared object in a file libtest.so

3. Link with main file cpp
     g++ -L$(pwd) -ltest -Wall -o runit main.cpp
     -------------------------------------------
     -L$(pwd) ... location of library
     -ltest ... name of the library will be:  libtest.so
      -o runit ... name of output file

4. Before I run the program I have to put library in library variable and export
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)
    ---------------------------------------------

5. I can run now:
    ./runit



				