
                CPP ofstream
                ============


#include <fstream>   // NOT ofstream !!!

Flags describing the requested i/o mode for the file.
-----------------------------------------------------

member constant	stands for	access
in *	                input	        File open for reading: the internal stream buffer supports input operations.
out	                output	        File open for writing: the internal stream buffer supports output operations.
binary	                binary	        Operations are performed in binary mode rather than text.
ate	                at end	        The output position starts at the end of the file.
app	                append	        All output operations happen at the end of the file, appending to its existing contents.
trunc	                truncate	Any contents that existed in the file before it is open are discarded.


Constructors
------------

ofstream(); //not associated with a file
ofstream(string& path, ios::out);
ofstream(const char* path, ios::in);
ofstream(ifstream& another);


Open stream/associate with file
-------------------------------


void open (const   char* filename,  ios_base::openmode mode = ios_base::on);
void open (const string& filename,  ios_base::openmode mode = ios_base::on);



Other functions
----------------


bool is_open(); //Returns whether the stream is currently associated to a file.


ostream& write (const char* s, streamsize n);  //writes block of data
ostream& put (char c);  // writes a char 
ostream& flush();
std::flush;

void close();

streampos tellp();// Get position in output sequence

ostream& seekp (streampos pos);    //sets position in stream where next writing will take place
ostream& seekp (streamoff off, ios_base::seekdir way);

Object of type ios_base::seekdir. It may take any of the following constant values:
value	offset is relative to...
ios_base::beg	beginning of the stream
ios_base::cur	current position in the stream
ios_base::end	end of the stream


bool good();     // returns true if no bad bit is set. Actually in ios::good()


iostate value
(member constant)	indicates	functions to check state flags
good()	                 eof() 	fail()	bad()	rdstate()
goodbit	         No errors      (zero value iostate)	true	false	false	false	goodbit
eofbit	                 End-of-File reached on input operation	false	true	false	false	eofbit
failbit	         Logical error on i/o operation	false	false	true	false	failbit
badbit	                 Read/writing error on i/o operation	false	false	true	true	badbit



Checking flags:
---------------
void print_state (const std::ios& stream) {
  std::cout << " good()=" << stream.good();
  std::cout << " eof()=" << stream.eof();
  std::cout << " fail()=" << stream.fail();
  std::cout << " bad()=" << stream.bad();
}


Example
-------

ifstream aIfs(aPath,ios::in);

    if(!aIfs.good()){
        cout << "Failed"<<endl;
        return;
    }
    char c=' ';
    int aCtr=0;
    while(aIfs.good()){
        aIfs.get(c);
        cout<<c;
        aCtr += aIfs.gcount();
    }
    cout<<endl;
    cout<<"Number of read chars: "<<aCtr;
    aIfs.close();
