
			includes
			--------

This function is used to recognise if all the numbers in the second container, are in the first container. 


includes:
--------
bool std::includes(containerA.begin(),containerA.end(),containerB.begin(),containerB.end());


BOTH CONTAINERS MUST BE SORTED!!!

This is applied to any container, not only to sets.
The whole containerB MUST be contained in ContainerA 
in a sense of sequence not in a sense of a set. 


#include <iostream>
#include <algorithm> // THIS ONE!!
#include <vector>
#include <random>
#include <iterator>


Examples
--------
    vector<int> vA={1,2,3,4,5,6,7,8,9};
    vector<int> vB={2,4,6,8,9};

    stable_sort(vA.begin(),vA.end());
    stable_sort(vB.begin(),vB.end());
    printVector(vA);
    printVector(vB);

    bool bT=includes(vA.begin(),vA.end(),vB.begin(),vB.end());
    if(bT){
        cout<<"VectorB is part of Vector A"<<endl;
    }else{
        cout<<"VectorB is NOT part of Vector A"<<endl;
    }

Output:   VectorB is part of Vector A




For vectors:

   vector<int> vA={1,2,3,4,5,6,7,8,9};
   vector<int> vB={1,1,2,2};

Output:  VectorB is NOT part of Vector A



