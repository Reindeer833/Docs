
		PYTHON LIST USAGE
		=================

Iterable collection
Order matters. Two lists with the same elements in different order
are different

Insert object or another another list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
listA[3:3] = [10]
In position 3 there is 10 now
listB[0:0]=-1   #WRONG - THERE MUST BE ITERABLE!!!





Replace object or another another list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
listA[2:3] = [10,20]
In position 2,3 there is 10,20 now
Whatever in position 2 was, it is replaced



Iterating through list with operation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[ print(j*j,end=' ') for j in listB ]
I can specify operation here


Iterating with enumerate
~~~~~~~~~~~~~~~~~~~~~~~~
for ix,nbr in enumerate(listB,1): #that 1 is neccessary as a start of ix
        x=nbr*nbr
        y=xp
        z=x-y
        print('{:>3}.\t{:>5}\t{:>5}\t{:>5}'.format(ix,x,y,z) )
        xp=x



Creating list with [operation iteration]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
listB=[int(10*random()) for ix in range(10)]





Creating list with [operation double iteration + condition]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
listD=[ i + j for i in range(1,5) for j in range(1,5) if j>=i]
Example:
def testListsBd(aLim):
    listD=[ '{:>3}{:>3}'.format(i,j) for i in range(1,aLim+1) for j in range(1,aLim+1) if j>=i]
    for ix,aV in enumerate(listD,1):
        print('{:>2}.{:>8}'.format(ix,aV) )

